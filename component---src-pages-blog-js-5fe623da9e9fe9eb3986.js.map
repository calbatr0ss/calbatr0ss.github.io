{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/blog.js"],"names":["SEO","title","description","image","article","pathname","useLocation","useStaticQuery","seoQuery","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","defaultProps","Blog","posts","data","allMarkdownRemark","edges","variant","gutterBottom","map","node","slug","frontmatter","key","style","paddingBottom","href","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"2FAAA,+FAMe,SAASA,EAAT,GAAsD,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAChDC,EAAaC,wBAAbD,SAD2D,EAElDE,YAAeC,GAAxBC,KASCC,aANRC,EALkE,EAKlEA,aACAC,EANkE,EAMlEA,cACAC,EAPkE,EAOlEA,mBACAC,EARkE,EAQlEA,QACAC,EATkE,EASlEA,aACAC,EAVkE,EAUlEA,gBAGKC,EAAM,CACXhB,MAAOA,GAASU,EAChBT,YAAaA,GAAeW,EAC5BV,MAAM,GAAIW,GAAUX,GAASY,GAC7BG,IAAI,GAAIJ,EAAUT,GAGnB,OACC,kBAAC,IAAD,CAAQJ,MAAOgB,EAAIhB,MAAOW,cAAeA,GACxC,0BAAMO,KAAK,cAAcC,QAASH,EAAIf,cAErCe,EAAIC,KAAO,0BAAMG,SAAS,SAASD,QAASH,EAAIC,OAC/Cd,EAAiB,KAAS,0BAAMiB,SAAS,UAAUD,QAAQ,YAC5DH,EAAIhB,OAAS,0BAAMoB,SAAS,WAAWD,QAASH,EAAIhB,QACpDgB,EAAIf,aAAe,0BAAMmB,SAAS,iBAAiBD,QAASH,EAAIf,cAEjE,0BAAMiB,KAAK,eAAeC,QAAQ,wBACjCJ,GAAmB,0BAAMG,KAAK,kBAAkBC,QAASJ,IACzDC,EAAIhB,OAAS,0BAAMkB,KAAK,gBAAgBC,QAASH,EAAIhB,QACrDgB,EAAIf,aAAe,0BAAMiB,KAAK,sBAAsBC,QAASH,EAAIf,eAarEF,EAAIsB,aAAe,CAClBrB,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,SAAS,GAKV,IAAMI,EAAQ,c,kCC5Dd,kKAOe,SAASe,EAAT,GAAyB,IACjCC,EADgC,EAARC,KACXC,kBAAkBC,MAErC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CACC1B,MAAM,OACNC,YAAY,cAEZG,SAAS,UAEV,kBAAC,IAAD,CAAYuB,QAAQ,MAApB,eACA,kBAAC,IAAD,CAAYA,QAAQ,YAAYC,cAAY,GAA5C,0FAGCL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACPC,EAAOD,EAAKE,YAAYD,KACxB/B,EAAQ8B,EAAKE,YAAYhC,OAAS+B,EACxC,OACC,6BAASE,IAAKF,EAAMG,MAAO,CAAEC,cAAe,KAC3C,gCACC,kBAAC,IAAD,CAAYR,QAAQ,MACnB,kBAAC,IAAD,CAAMS,KAAML,GAAO/B,IAEpB,kBAAC,IAAD,CAAY2B,QAAQ,aAAaG,EAAKE,YAAYK,OAEnD,iCACC,kBAAC,IAAD,CACCC,wBAAyB,CACxBC,OAAQT,EAAKE,YAAY/B,aAAe6B,EAAKU,iBAW/C,IAAMC,EAAS","file":"component---src-pages-blog-js-5fe623da9e9fe9eb3986.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useLocation } from \"@reach/router\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport default function SEO({ title, description, image, article }) {\n\tconst { pathname } = useLocation()\n\tconst { site } = useStaticQuery(seoQuery)\n\n\tconst {\n\t\tdefaultTitle,\n\t\ttitleTemplate,\n\t\tdefaultDescription,\n\t\tsiteUrl,\n\t\tdefaultImage,\n\t\ttwitterUsername,\n\t} = site.siteMetadata\n\n\tconst seo = {\n\t\ttitle: title || defaultTitle,\n\t\tdescription: description || defaultDescription,\n\t\timage: `${siteUrl}${image || defaultImage}`,\n\t\turl: `${siteUrl}${pathname}`,\n\t}\n\n\treturn (\n\t\t<Helmet title={seo.title} titleTemplate={titleTemplate}>\n\t\t\t<meta name=\"description\" content={seo.description} />\n\t\t\t{/* <meta name=\"image\" content={seo.image} /> */}\n\t\t\t{seo.url && <meta property=\"og:url\" content={seo.url} />}\n\t\t\t{(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\t\t\t{seo.title && <meta property=\"og:title\" content={seo.title} />}\n\t\t\t{seo.description && <meta property=\"og:description\" content={seo.description} />}\n\t\t\t{/* {seo.image && <meta property=\"og:image\" content={seo.image} />} */}\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t{twitterUsername && <meta name=\"twitter:creator\" content={twitterUsername} />}\n\t\t\t{seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\t\t\t{seo.description && <meta name=\"twitter:description\" content={seo.description} />}\n\t\t\t{/* {seo.image && <meta name=\"twitter:image\" content={seo.image} />} */}\n\t\t</Helmet>\n\t)\n}\n\nSEO.propTypes = {\n\ttitle: PropTypes.string,\n\tdescription: PropTypes.string,\n\timage: PropTypes.string,\n\tarticle: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n\ttitle: null,\n\tdescription: null,\n\timage: null,\n\tarticle: false,\n}\n\n// TODO: add image SEO\n// defaultImage: image\nconst seoQuery = graphql`\n\tquery SEO {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tdefaultTitle: title\n\t\t\t\ttitleTemplate\n\t\t\t\tdefaultDescription: description\n\t\t\t\tsiteUrl: url\n\t\t\t\ttwitterUsername\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Link from \"@material-ui/core/Link\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Blog({ data }) {\n\tconst posts = data.allMarkdownRemark.edges\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO\n\t\t\t\ttitle=\"Blog\"\n\t\t\t\tdescription=\"The CalZone\"\n\t\t\t\t// image={post.frontmatter.image.childImageSharp.sizes.src}\n\t\t\t\tpathname=\"/blog\"\n\t\t\t/>\n\t\t\t<Typography variant=\"h3\">The CalZone</Typography>\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tI write about stuff I learn, projects I work on, or thoughts I feel are worth sharing.\n\t\t\t</Typography>\n\t\t\t{posts.map(({ node }) => {\n\t\t\t\tconst slug = node.frontmatter.slug\n\t\t\t\tconst title = node.frontmatter.title || slug\n\t\t\t\treturn (\n\t\t\t\t\t<article key={slug} style={{ paddingBottom: 24 }}>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Typography variant=\"h4\">\n\t\t\t\t\t\t\t\t<Link href={slug}>{title}</Link>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">{node.frontmatter.date}</Typography>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t__html: node.frontmatter.description || node.excerpt,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</Layout>\n\t)\n}\n\nexport const pageQuery = graphql`\n\tquery AllPosts {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(\n\t\t\tfilter: { frontmatter: { slug: { regex: \"//blog//\" } } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\texcerpt\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}